#!/bin/bash

# Replace "python3" with your Python interpreter if needed
DS="BS" 
Operation="Search" 
cd ..
touch "repro/experimentaldata_bs_preproc_wallclock"  "repro/experimentaldata_bs_wallclock"
rm "repro/experimentaldata_bs_preproc_wallclock"  "repro/experimentaldata_bs_wallclock"
touch "repro/experimentaldata_bs_preproc_wallclock"  "repro/experimentaldata_bs_wallclock"
nitrs=1
minsize=16
maxsize=24
stepsize=2
for itr in $(seq 1 $nitrs); do
 for bssize in $(seq $minsize $stepsize $maxsize); do
 	input_file="repro/data/log_basic_bs_online_${bssize}_itr_${itr}"
	echo $input_file
 	output=$(python3 repro/extract_data_bs.py "$input_file")

 	# Read the output into an array
	 IFS=$'\n' read -d '' -r -a values <<< "$output"

	 # Store each value in different variables
	 bssize=$bssize  
 	 optimization_flag=0 
	 extract_wc=${values[1]} 
 
	 datafile="repro/experimentaldata_bs_wallclock"
 	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $bssize $extract_wc

 	 input_file="repro/data/log_opt_bs_online_${bssize}_itr_${itr}"
 	 echo $input_file
 	 output=$(python3 repro/extract_data_bs.py "$input_file")

	 # Read the output into an array
 	 IFS=$'\n' read -d '' -r -a values <<< "$output"

 	# Store each value in different variables
	 bssize=$bssize  optimization_flag=1 extract_wc=${values[1]}
 	 datafile="repro/experimentaldata_bs_wallclock"
 	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $bssize $extract_wc
 done	
done
echo "OnlineTable"
cat $datafile
echo -e "\n\n"

for itr in $(seq 1 $nitrs); do
  for bssize in $(seq $minsize $stepsize $maxsize); do
	input_file="repro/data/log_basic_bs_preproc_${bssize}_itr_$itr"
  	output=$(python3 repro/extract_data_from_preproc.py "$input_file")

  	# Read the output into an array
  	IFS=$'\n' read -d '' -r -a values <<< "$output"

  	# Store each value in different variables
 	bssize=$bssize  optimization_flag=0 preproc_wc=${values[2]} 
  	datafile="repro/experimentaldata_bs_preproc_wallclock"
  	python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $bssize $preproc_wc

  	input_file="repro/data/log_opt_bs_preproc_${bssize}_itr_$itr"
  	output=$(python3 repro/extract_data_from_preproc.py "$input_file")

 	 # Read the output into an array
  	IFS=$'\n' read -d '' -r -a values <<< "$output"

  	# Store each value in different variables
  	bssize=$bssize  optimization_flag=1 preproc_wc=${values[2]}
  	datafile="repro/experimentaldata_bs_preproc_wallclock"
  	python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $bssize $preproc_wc
  done
done

echo "PrprocTable"
cat $datafile
echo -e "\n\n"

