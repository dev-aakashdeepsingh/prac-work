#!/bin/bash

# Replace "python3" with your Python interpreter if needed
DS="Heap" 
Operation="Extract" 
cd ..

touch "repro/experimentaldata_preproc_bw"  "repro/experimentaldata_bw"
rm "repro/experimentaldata_preproc_bw"  "repro/experimentaldata_bw"
touch "repro/experimentaldata_preproc_bw"  "repro/experimentaldata_bw"
nitrs=2
minsize=16
maxsize=26
stepsize=2
for itr in $(seq 1 $nitrs); do
 for heapsize in $(seq $minsize $stepsize $maxsize); do
 	input_file="repro/data/log_basic_heap_extract_online_${heapsize}_itr_${itr}"
	echo $input_file
 	output=$(python3 repro/extract_data.py "$input_file")

 	# Read the output into an array
	 IFS=$'\n' read -d '' -r -a values <<< "$output"

	 # Store each value in different variables
	 echo ${values[0]}
	 echo ${values[1]}
	 echo ${values[2]}
	 echo ${values[3]}
	 echo ${values[4]}
         echo ${values[5]}
	 echo "------"	 
	 heapsize=${values[0]}  
 	 optimization_flag=${values[1]} 
	 bytes=${values[5]}
	 #seconds=$((milliseconds / 1000))
	 KiB=$(echo "scale=3; $bytes / 1024" | bc)  # Use bc for decimal division
	 bw=$KiB

	 datafile="repro/experimentaldata_bw"
 	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $bw

 	 input_file="repro/data/log_opt_heap_extract_online_${heapsize}_itr_${itr}"
 	 echo $input_file
 	 output=$(python3 repro/extract_data.py "$input_file")

	 # Read the output into an array
 	 IFS=$'\n' read -d '' -r -a values <<< "$output"

 	# Store each value in different variables
	 bytes=${values[5]}
	 KiB=$(echo "scale=3; $bytes / 1024" | bc)  # Use bc for decimal division
	 heapsize=${values[0]}  optimization_flag=${values[1]} bw=$KiB
 	 datafile="repro/experimentaldata_bw"
 	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $bw
 done	
done
echo "OnlineTable"
cat $datafile
echo -e "\n\n"

nitrs=2
for itr in $(seq 1 $nitrs); do
  for heapsize in $(seq $minsize $stepsize $maxsize); do
	input_file="repro/data/log_basic_heap_extract_preproc_${heapsize}_itr_$itr"
  	output=$(python3 repro/extract_data_from_preproc.py "$input_file")

  	# Read the output into an array
  	IFS=$'\n' read -d '' -r -a values <<< "$output"

  	# Store each value in different variables
 	 heapsize=${values[0]}  optimization_flag=${values[1]} preproc_wc=${values[2]} 
  	 bytes=${values[3]}
         KiB=$(echo "scale=3; $bytes / 1024" | bc)  # Use bc for decimal division
	 bw=$KiB
	 echo ${values[0]}
         echo ${values[1]}
         echo ${values[2]}
         echo ${values[3]}
         echo "-------" 	 
	 datafile="repro/experimentaldata_preproc_bw"
  	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $bw

  	 input_file="repro/data/log_opt_heap_extract_preproc_${heapsize}_itr_$itr"
  	 output=$(python3 repro/extract_data_from_preproc.py "$input_file")

 	 # Read the output into an array
  	 IFS=$'\n' read -d '' -r -a values <<< "$output"

  	 # Store each value in different variables
  	 heapsize=${values[0]}  optimization_flag=${values[1]} preproc_wc=${values[2]}
	 bytes=${values[3]}
         KiB=$(echo "scale=3; $bytes / 1024" | bc)  # Use bc for decimal division
         bw=$KiB

  	 datafile="repro/experimentaldata_preproc_bw"
  	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $bw
  done
done

echo "Preproc Table"
cat $datafile
echo -e "\n\n"
nitrs=0
# Replace "python3" with your Python interpreter if needed
DS="Heap"
Operation="Insert"

for itr in $(seq 1 $niters); do
  for heapsize in $(seq $minsize $stepsize $maxsize); do
	 input_file="repro/data/log_basic_heap_insert_online_${heapsize}_itr_$itr"
	 output=$(python3 repro/extract_data.py "$input_file")

	 # Read the output into an array
 	IFS=$'\n' read -d '' -r -a values <<< "$output"
	 # Store each value in different variables
 	heapsize=${values[0]}  optimization_flag=${values[1]}  insert_wc=${values[2]}
	datafile="repro/experimentaldata_bw"
 	python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $insert_wc
 	input_file="repro/data/log_opt_heap_insert_online_${heapsize}_itr_$itr"
 	output=$(python3 repro/extract_data.py "$input_file")

	 # Read the output into an array
	 IFS=$'\n' read -d '' -r -a values <<< "$output"
 	# Store each value in different variables
 	heapsize=${values[0]}  optimization_flag=${values[1]}  insert_wc=${values[2]}
 	datafile="repro/experimentaldata_bw"
	python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $insert_wc 
  done
done

echo "Online Table"
cat $datafile
echo -e "\n\n"

for itr in $(seq 1 $niters); do
    for heapsize in $(seq $minsize $stepsize $maxsize); do	
	 
	input_file="repro/data/log_basic_heap_insert_preproc_${heapsize}_itr_$itr"
 	output=$(python3 repro/extract_data_from_preproc.py "$input_file")
 	# Read the output into an array
 	IFS=$'\n' read -d '' -r -a values <<< "$output"
 	# Store each value in different variables
 	heapsize=${values[0]}  optimization_flag=${values[1]} preproc_wc=${values[2]}
 	datafile="repro/experimentaldata_preproc_bw"
 	python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $preproc_wc

 	input_file="repro/data/log_opt_heap_insert_preproc_${heapsize}_itr_$itr"
	 output=$(python3 repro/extract_data_from_preproc.py "$input_file")
	 # Read the output into an array
	 IFS=$'\n' read -d '' -r -a values <<< "$output"
	 # Store each value in different variables
	 heapsize=${values[0]}  optimization_flag=${values[1]} preproc_wc=${values[2]}
	 datafile="repro/experimentaldata_preproc_bw"
	 python3 repro/append-experiment-results.py $datafile $DS $Operation $optimization_flag $heapsize $preproc_wc
   done
done
echo "Preproc Table"
cat $datafile

